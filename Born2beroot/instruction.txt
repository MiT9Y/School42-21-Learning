Изменить имя хоста
sudo nano /etc/hostname
sudo nano /etc/hosts

LVM

Logical Volume Manager - это еще один программный уровень абстракции над физическими разделами жесткого диска, который позволяет создавать логические тома для хранения данных без непосредственной переразметки жесткого диска на одном или нескольких жестких дисках. LVM увеличивает удобство работы с жестким диском, аппаратные особенности работы скрываются программным обеспечением, поэтому вы можете изменять размеры дисков, перемещать их на лету, без остановки приложений или размонтирования файловых систем.
sudo lvdisplay -Cv
sudo lvreduce -L -52M /dev/LVMGroup/var-log
sudo pvdisplay
sudo lvextend -l +100%FREE /dev/LVMGroup/var-log

Настройка SSH server
sudo nano /etc/ssh/sshd_config
Port 4242
PermitRootLogin no
ListenAddress 192.168.56.101
LoginGraceTime 30s

Настройка фаервола UFW
sudo ufw status
sudo ufw status numbered
sudo ufw default deny incoming - запрет на все входящие
sudo ufw default allow outgoing - разрешить все исходящие
sudo ufw allow proto tcp from 192.168.56.0/24 to port 4242
sudo ufw status verbose
sudo ufw logging medium
sudo ufw enable
sudo ufw disable
sudo ufw delete {rule-number-here}
sudo ufw delete 2

Установка и настройка Apparmor
sudo apt install apparmor-utils apparmor-profiles
sudo apparmor_status

sudo aa-enforce man Enforce - ядро гарантирует соблюдение правил, указанных в файле профиля, все нарушения блокируются, а также записываются в файл журнала, где могут быть очень легко просмотрены. (для программы man)
sudo aa-comlain man Complain - режим обучения, программа будет только регистрировать нарушения ничего не блокируя (для программы man)

/usr/share/apparmor/extra-profiles (здесь лежат шаблоны профелей)
include позволяет включать другие файлы с разрешениями, они находятся в папке /etc/apparmor.d/abstractions/. Это такие же части профиля, со списком файлов и правами доступа. Они облегчают создание новых профилей.
man capabilities - Можно также указывать Capabilities ядра Linux, которые процессу разрешено использовать. Их полный список есть в соответствующей странице мануала.
r - разрешить чтение
w - разрешить запись
a - разрешить запись в конец файла
px - разрешить запуск новых процессов если для них есть профиль
Px - разрешить запуск новых процессов, если для них есть профиль и стереть переменные окружения
ix - разрешить запуск нового процесса под профилем текущего
m - разрешить загружать исполняемые файлы в память и запускать
l - разрешить создавать символические ссылки на исполняемые файлы
k - разрешить блокировать файлы
ux - не контролировать новые процессы
Ux - не контролировать новые процессы и очистить переменные окружения.

sudo aa-autodep free (инициализировать шаблон профиля)
sudo aa-genprof free (профилирование программы - Программа говорит, что нужно запустить программу в отдельном окне терминала, и выполнить все действия, которые она может делать, затем нажать S.)
sudo aa-enforce free - применить правила для free
sudo aa-parser имя_профиля -a (Если вы меняли профиль вручную, то его необходимо перезагрузить, чтобы изменения вступили в силу, для этого используйте команду)
sudo service apparmor reload (Перезагрузить все профили можно командой)
sudo service apparmor stop
sudo service apparmor teardown - выгрузить профили

ТЕСТ!
sudo touch /test
sudo cp /usr/bin/free /usr/bin/free1
sudo cp /bin/cp /usr/bin/free
sudo free /test /test1
tail /var/log/kern.log

ЛИРИКА!!!
Операционная система имеет фундаментальное ограничение в плане разделения доступа процессов к ресурсам — доступ к ресурсам основывается на правах доступа пользователя. Это классические права rwx на трех уровнях — владелец, группа-владелец и остальные.
SELinux (англ. Security-Enhanced Linux — Linux с улучшенной безопасностью) — реализация системы принудительного контроля доступа, которая может работать параллельно с классической избирательной системой контроля доступа. В SELinux права доступа определяются самой системой при помощи специально определенных политик. Политики работают на уровне системных вызовов и применяются самим ядром (но можно реализовать и на уровне приложения). SELinux действует после классической модели безопасности Linux. Иными словами, через SELinux нельзя разрешить то, что запрещено через права доступа пользователей или групп. Политики описываются при помощи специального гибкого языка описания правил доступа.
AppArmor — программный инструмент упреждающей защиты, основанный на политиках безопасности (известных также как профили), которые определяют, к каким системным ресурсам и с какими привилегиями может получить доступ то или иное приложение. В AppArmor включён набор стандартных профилей, а также инструменты статического анализа и инструменты, основанные на обучении, позволяющие ускорить и упростить построение новых профилей. Базовые элементы AppArmor предустановлены в Debian, что касается инструментов управления и набора профилей приложений, то их нужно устанавливать отдельно.

SELinux представляет один из нескольких возможных подходов к ограничению действий, выполняемых установленным ПО.
Система AppArmor делает примерно то же самое, что и SELinux. Одно важное различие между этими системами — способ идентификации объектов файловой системы: AppArmor использует полный путь, SELinux же работает глубже, используя индексный дескриптор.
Эти различия проявляются в двух случаях:
если файл имеет вторую, незащищенную жёсткую ссылку, то AppArmor разрешит доступ через нее, а SELinux откажет, так как жёсткие ссылки ссылаются на один и тот же индексный дескриптор
если же приложение пересоздает защищенный файл, что используется довольно часто и приводит к изменению индексного дескриптора, то AppArmor продолжит отказывать в доступе, а SELinux его разрешит
Избежать этих проблем в обеих системах позволит применение политики «no access» по умолчанию.

Advanced Packaging Tool (apt-get moo)
apt (advanced packaging tool) — программа для установки, обновления и удаления программных пакетов в операционных системах Debian и основанных на них (Ubuntu, Linux Mint и т. п.), иногда также используется в дистрибутивах, основанных на Mandrake, например Mandriva, ALT Linux и PCLinuxOS. Способна автоматически устанавливать и настраивать программы для UNIX-подобных операционных систем как из предварительно откомпилированных пакетов, так и из исходных кодов.
Пакеты берутся из интернет-репозиториев, либо их можно установить с имеющихся носителей. Список источников пакетов хранится в файле /etc/apt/sources.list и в каталоге /etc/apt/sources.list.d/.
Графические оболочки для apt позволяют легко добавлять новые и удалять ненужные источники. Представляет собой библиотеку, предоставляющую другим программам (таким как apt-get или apt-secure) возможности для работы с пакетами. Существует несколько графических оболочек для apt:
Aptitude

Главное отличие apt от apt-get - в том, что программа объединяет большинство команд apt-get и apt-cache. Вся функциональность теперь находится в одной утилите.

dpkg — это программное обеспечение, являющееся основой системы управления пакетами в Debian и ряде других операционных систем, основанных на Debian, например Ubuntu. dpkg используется для установки, удаления, и получения информации о .deb пакетах.
dpkg является довольно низкоуровневой утилитой. Существуют более высокоуровневые утилиты, например APT, которые могут загружать пакеты из сетевого репозитория и отслеживать зависимости между пакетами. Конечным пользователям следует использовать утилиты с более дружественным интерфейсом, такие как Aptitude или Synaptic, предоставляющие лёгкий способ просмотра списка пакетов, их описания и зависимостей.

SUDO
su -
exit
apt-get install sudo
sudo nano /etc/sudoers
env_reset - сбрасывает все пользовательские переменные;
mail_badpass - сообщает системе отправлять уведомления о неудачных попытках ввода пароля sudo пользователю mailto. По умолчанию это учетная запись root.
secure_path - пути, по которым операционная система будет искать файлы, используемые для операций sudo.
Defaults        logfile=/var/log/sudo/log
Defaults        log_input, log_output
Defaults        iolog_dir=/var/log/sudo
Defaults        requiretty  - Для того, чтобы исключить, отображение пароля в открытом виде при выполнении команды через sudo посредством ssh (sudo: sorry, you must have a tty to run sudo)
Defaults        passwd_tries=3
Defaults        badpass_message="Password is wrong, please try again"
Defaults        timestamp_timeout=2
## User privilege specification
[пользователь] [хост]=([кем может стать]) [что может сделать]
Host alias - это псевдонимы для IP адресов с которых отправляются на выполнение команды. Псевдоним для хоста можно задать следующим образом:
Host_Alias  MYPC = 192.168.56.0/255.255.255.0
Cmnd_Alias  ALL_ACCESS = /usr/local/sbin/*, /usr/local/bin/*, /usr/sbin/*, /usr/bin/*, /sbin/*, /bin/*, /snap/bin/*
sudo chmod o-x /usr/bin/su

Работа с пользователями
sudo cat /etc/group - список групп всех
groups - список групп тек. польователя
groups msimon
id msimon
sudo groupadd user42
sudo delgroup user42
sudo usermod -a -G user42 msimon (usermod -g и -G без -a)
sudo gpasswd -d msimon user42 удалить пользователя из группы

sudo useradd test
useradd опции имя_пользователя
-b - базовый каталог для размещения домашнего каталога пользователя, по умолчанию /home;
-c - комментарий к учетной записи;
-d - домашний каталог, в котором будут размещаться файлы пользователя;
-e - дата, когда учетная запись пользователя будет заблокирована, в формате ГГГГ-ММ-ДД;
-f - заблокировать учетную запись сразу после создания;
-g - основная группа пользователя;
-G - список дополнительных групп;
-k - каталог с шаблонами конфигурационных файлов;
-l - не сохранять информацию о входах пользователя в lastlog и faillog;
-m - создавать домашний каталог пользователя, если он не существует;
-M - не создавать домашнюю папку;
-N - не создавать группу с именем пользователя;
-o - разрешить создание пользователя linux с неуникальным идентификатором UID;
-p - задать пароль пользователя;
-r - создать системного пользователя, не имеет оболочки входа, без домашней директории и с идентификатором до SYS_UID_MAX;
-s - командная оболочка для пользователя;
-u - идентификатор для пользователя;
-D - отобразить параметры, которые используются по умолчанию для создания пользователя. Если вместе с этой опцией задать еще какой-либо параметр, то его значение по умолчанию будет переопределено.

sudo cat /etc/passwd
sudo sed 's/:.*//' /etc/passwd

userdel параметры пользователь
-f, --force - принудительное удаление, даже если пользователь еще залогинен.
-r, --remove - удалить домашнюю директорию пользователя и его файлы в системе.
-Z - удалить все SELinux объекты для этого пользователя.
sudo userdel -r test

passwd опции пользователь
-d - удалить пароль пользователя, после этого он не сможет войти
-e - сделать пароль устаревшим
-i - через сколько дней после того, как пароль устарел, отключить аккаунт, если пользователь не сменил пароль
-l - запретить пользователю входить в систему
-n - минимальное количество дней между сменами пароля
-S - отобразить информацию об аккаунте
-u - отменяет действие параметра -l
-x - максимальное количество дней, пока пароль можно использовать.
-w - количество дней, после которых нужно предупреждать пользователя о том, что надо сменить пароль.
passwd test

ПОЛИТИКА ПАРОЛЕЙ
Файл /etc/login.defs содержит настройки подсистемы теневых паролей (shadow password suite). Этот файл является обязательным. Отсутствие данного файла не повлияет на работу системы, но, вероятно, приведёт к выполнению нежелаемых операций.
PASS_MAX_DAYS   30 (Максимальное число дней использования пароля. Если пароль старее этого числа, то будет запущена процедура смены пароля.)
PASS_MIN_DAYS   2 (Максимальное число дней между изменениями пароля. Любая смена пароля ранее заданного срока выполнена не будет.)
PASS_WARN_AGE   7 (Число дней за которое начнёт выдаваться предупреждение об устаревании пароля. Нулевое значение означает, что предупреждение выдаётся в день устаревания, при отрицательном значении предупреждение выдаваться не будет. Если значение не задано, выдача предупреждения отключается.)

chage - изменяет настройки срока действия пароля
sudo chage -M 30 -m 2 -W 7 msimon

PAM pwquality
sudo nano /etc/pam.d/common-password
etry = 3: запросить пользователя 3 раза ввести пароль, прежде чем вернуть ошибку.
minlen = 8: длина пароля не может быть меньше, чем этот параметр
maxrepeat = 3: разрешить максимум 3 повторяющихся символа
ucredit = -1: требуется хотя бы один заглавный символ
lcredit = -1: должен иметь хотя бы один символ нижнего регистра.
dcredit = -1: должен иметь хотя бы одну цифру
difok = 3: количество символов в новом пароле, которое не должно присутствовать в старом пароле.
gecoscheck = 1: слова в поле GECOS пользовательской записи passwd не содержатся в новом пароле.

sudo reboot

root - 124578Admin

Скрипт
/usr/bin/bash /home/msimon/monitoring.sh
http://rus-linux.net/MyLDP/hard/cpu-details.html - виртуальные и физические процессоры
nproc --all (print the number of installed processors Read more at: https://www.commandlinux.com/man-page/man1/nproc.1.html)
cat /proc/cpuinfo
lscpu

AWK — C-подобный скриптовый язык построчного разбора и обработки входного потока (например, текстового файла) по заданным шаблонам (регулярным выражениям).

cat /dev/urandom > /dev/null -загрузка ЦП

CRON
Cron - системный демон, используемый для выполнения задач (в фоновом режиме) в указанное время.
Crontab - команда, которая используется, для управления планировщиком Cron. Команда crontab создает файл crontab, содержащий команды и инструкции для запуска демона cron.
sudo crontab -u root -l
sudo crontab -u root -e
*/10 * * * * bash /home/msimon/monitoring.sh

Установка и настройка WEB сервера + БД + WordPress
WEB
sudo apt-get update
sudo apt-get install lighttpd
sudo ufw allow from 192.168.56.0/24 to 192.168.56.101 port 80 proto tcp
/etc/init.d/lighttpd status

БД
sudo apt-get install mariadb-server
Для настройки базовых вещей в сервере, запустим настройку сервера через mysql_secure_installation. На время этой установки, пароль будет security. Ваш же пароль, как понимаете, должен отличаться.
/usr/bin/mysql_secure_installation
Запустится скрипт, с запросами на то или иное действие. Вот ответы:
Skip root password for root
Мы еще не устанавливали пароль для root, поэтому при запуске скрипта и запросе пароля для root, просто нажмите Enter.
Install new password for root: security
А вот тут можно установить пароль для root
Do remove an anonymous user
На вопрос о том, удалить ли анонимного пользователя, отвечаем да
Do not disallow remote connections
Не запрещаем коннект к нашему северу с удаленных серверов (если, конечно, эта опция вам нужна, в другом случае, запретите ее)
Do remove a test database
Тестовая база нам не нужна - удаляйте ее
Do reload the privileges
Перегрузим привилегии для их активации

sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf
sudo systemctl restart mariadb
sudo ufw allow from 192.168.56.0/24 to 192.168.56.101 port 3306 proto tcp
sudo mysql -p -u root
CREATE USER  'msimon'@'192.168.56.%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'msimon'@'192.168.56.%';
FLUSH PRIVILEGES;

PHP
sudo apt-get install php-cgi php-mysql

Подключаем accesslog
sudo nano /etc/lighttpd/lighttpd.conf
 "mod_accesslog"
 accesslog.filename          = "/var/log/lighttpd/access.log"

Подключаем поддержку PHP на web сервере
ln -s /etc/lighttpd/conf-available/10-fastcgi.conf /etc/lighttpd/conf-enabled/
ln -s /etc/lighttpd/conf-available/15-fastcgi-php.conf /etc/lighttpd/conf-enabled/
проверка 
<?php
phpinfo();
?>

Установка и настройка WordPress
sudo wget http://wordpress.org/latest.tar.gz -P /var/www/html
sudo tar -xzvf /var/www/html/latest.tar.gz
sudo rm /var/www/html/latest.tar.gz
sudo cp -r /home/msimon/wordpress/* /var/www/html
sudo rm -r /home/msimon/wordpress/
sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php

Настройка OpenVPN
sudo apt update
sudo apt install openvpn
wget -P ~/ https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.6/EasyRSA-unix-v3.0.6.tgz
cd ~
tar xvf EasyRSA-unix-v3.0.6.tgz
rm EasyRSA-unix-v3.0.6.tgz
cp vars.example vars
nano vars
./easyrsa init-pki
./easyrsa build-ca nopass
./easyrsa gen-req server nopass
./easyrsa sign-req server server - подпишем сертификат
./easyrsa gen-dh
sudo openvpn --genkey --secret ta.key
sudo cp ~/EasyRSA-v3.0.6/pki/issued/server.crt /etc/openvpn/
sudo cp ~/EasyRSA-v3.0.6/pki/ca.crt /etc/openvpn/
sudo cp ~/EasyRSA-v3.0.6/ta.key /etc/openvpn/
sudo cp ~/EasyRSA-v3.0.6/pki/dh.pem /etc/openvpn/

клиент
./easyrsa gen-req client1 nopass
./easyrsa sign-req client client1
расположение ключей (~/EasyRSA-v3.0.6/pki/private/client1.key, ~/EasyRSA-v3.0.6/ta.key, ~/EasyRSA-v3.0.6/pki/ca.crt)

sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz /etc/openvpn/
sudo gzip -d /etc/openvpn/server.conf.gz

sudo systemctl start openvpn@server
sudo systemctl status openvpn@server
sudo systemctl enable openvpn@server - автозагрузка
sudo ufw allow 2121/udp

cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/